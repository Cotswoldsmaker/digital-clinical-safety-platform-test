name: cicd
on:
  push:
    branches:
      - master 
      - main
permissions:
  contents: write

jobs:
  docker-cicd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and run Docker container
        id: docker
        run: |
          CONTAINER_EXIT_CODE=$(docker-compose -f .cicd/docker-compose.yml up)
          echo "Container Exit Code: $CONTAINER_EXIT_CODE"
          echo "##[set-output name=exit-code]${CONTAINER_EXIT_CODE}"
      
      - name: Check exit code
        run: |
          EXIT_CODE=${{ steps.docker.outputs.exit-code }}
          if [ "$EXIT_CODE" -ne 0 ]; then
            echo "Docker container exited with an error"
            exit 1
          fi


      #- name: Checkout code
      #  uses: actions/checkout@v2

      #- name: Build Docker image & run linter, security, typing and unit testing
      #  run: docker-compose -f .cicd/docker-compose.yml up








  mkdocs-documents:
    runs-on: ubuntu-latest
    needs: docker-cicd
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: pip install -r ./mkdocs_dcsp/requirements_mkdocs_dcsp.txt
      - run: mkdocs gh-deploy --force --config-file './mkdocs_dcsp/mkdocs.yml'
#  linter:
#    name: runner / black formatter
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: rickstaa/action-black@v1
#        with:
#          black_args: ". --check"

  #bandit:
  #  runs-on: ubuntu-latest
  #  needs: linter
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v2
  #
  #    - name: Set up Python
  #      uses: actions/setup-python@v2
  #      with:
  #        python-version: 3.8
  #
  #    - name: Install dependencies
  #      run: |
  #        python -m pip install --upgrade pip
  #        pip install bandit
  #
  #    - name: Run Bandit
  #      run: bandit -r .


