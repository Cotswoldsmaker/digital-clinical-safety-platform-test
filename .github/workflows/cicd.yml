name: cicd
on:
  push:
    branches:
      - master 
      - main
permissions:
  contents: write

jobs:
  docker-cicd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v32

      - name: List all added files
        run: |
           for file in ${{ steps.changed-files.outputs.modified_files }}; do
              echo "$file was modified."
           done

      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@v1
  
      #- name: Check if Docker image has changed
      #  id: check_changes
      #  run: |
      #    DOCKERFILE_HASH=$(cat ./dockerfiles/app/Dockerfile | md5sum | awk '{print $1}')
      #    DOCKERHUB_HASH=$(docker pull cotswoldsmaker/dcsp:latest 2>&1 | grep Digest | awk '{print $2}')
      #    echo "::set-output name=dockerfile_hash::$DOCKERFILE_HASH"
      #    echo "::set-output name=dockerhub_hash::$DOCKERHUB_HASH"
      #  shell: bash
  
      #- name: Build and push Docker Compose services
      #  if: steps.check_changes.outputs.dockerfile_hash != steps.check_changes.outputs.dockerhub_hash
      #  run: |
      #    docker-compose build
      #    echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      #    docker-compose push
      #  env:
      #    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      #    DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  
      #- name: Pull Docker Compose services
      #  if: steps.check_changes.outputs.dockerfile_hash == steps.check_changes.outputs.dockerhub_hash
      #  run: docker-compose pull

      - name: Build Docker image & run linter, security, typing and unit testing 
        run: >
          DJANGO_SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}' 
          ALLOW_HOSTS='${{ secrets.ALLOW_HOSTS }}' 
          docker-compose -f .cicd/docker-compose.yml up --exit-code-from docs-builder-cicd

  mkdocs-documents:
    runs-on: ubuntu-latest
    needs: docker-cicd
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: pip install -r ./mkdocs_dcsp/requirements_mkdocs_dcsp.txt
      - run: mkdocs gh-deploy --force --config-file './mkdocs_dcsp/mkdocs.yml'
